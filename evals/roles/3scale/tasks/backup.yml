---
# Create ServiceAccount
- name: Create ServiceAccount and role binding
  include_role:
    name: backup
    tasks_from: _setup_service_account.yml
  vars:
    binding_name: threescale_backup_binding
    serviceaccount_namespace: '{{ threescale_namespace }}'

# MySQL secret create
- name: Get MySQL password
  shell: oc get dc system-mysql -n {{ threescale_namespace }} -o jsonpath='{ .spec.template.spec.containers[?(@.name=="system-mysql")].env[?(@.name=="MYSQL_ROOT_PASSWORD")].value }'
  register: threescale_mysql_password

- name: Get MySQL database
  shell: oc get dc system-mysql -n {{ threescale_namespace }} -o jsonpath='{ .spec.template.spec.containers[?(@.name=="system-mysql")].env[?(@.name=="MYSQL_DATABASE")].value }'
  register: threescale_mysql_database

- name: Create the MySQL credentials secret for backup
  include_role:
    name: backup
    tasks_from: _create_mysql_secret.yml
  vars:
    secret_name: threescale-mysql-secret
    secret_mysql_user: root
    secret_mysql_host: system-mysql
    secret_mysql_password: '{{ threescale_mysql_password.stdout }}'

- name: Create the 3scale MySQL CronJob
  shell: oc process -f {{ backup_resources_location }}/backup-cronjob-template.yaml \
    -p 'COMPONENT=mysql' \
    -p 'COMPONENT_SECRET_NAME={{ threescale_backup_mysql_secret }}' \
    -p 'BACKEND_SECRET_NAME={{ aws_credential_secret_name }}' \
    -p 'ENCRYPTION_SECRET_NAME={{ threescale_backup_encryption_secret }}' \
    -p 'IMAGE={{ backup_image }}' \
    -p 'CRON_SCHEDULE="{{ backup_schedule }}"' \
    -p 'NAME=mysql-backup' | oc create -n {{ threescale_namespace }} -f -
